plugins {
    id 'fabric-loom' version '0.11-SNAPSHOT'
    id 'maven-publish'
    id 'idea'
    id "com.github.johnrengelman.shadow" version "7.0.0"
}

archivesBaseName = "${modName}-fabric-${minecraftVersion}"

configurations {
    common
    shadowCommon
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraftVersion}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${fabricLoaderVersion}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabricVersion}"
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    implementation project(":Common")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    implementation "me.zeroeightsix:fiber:$fiberVersion"

    implementation("com.moandjiezana.toml:toml4j:$toml4jVersion")
    shadowCommon("com.moandjiezana.toml:toml4j:$toml4jVersion") {
        exclude(module: "gson")
    }
}

loom {
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}

shadowJar {
    relocate "com.moandjiezana.toml", "at.petrak.paucal.shadowed.com.moandjiezana.toml"

    configurations = [project.configurations.shadowCommon]
    classifier "shadow"
}

processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}


remapJar {
    dependsOn(shadowJar)
    input.set(shadowJar.archiveFile)
    archiveClassifier = "fabric"

    from rootProject.file("LICENSE.txt")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }

    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
